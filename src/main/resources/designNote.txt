设计模式：编程时，有意识地面向接口编程，多用封装，继承，组合，多态等oop思想

常用的设计模式：
创建型（创建一个对象）：单例模式，工厂模式，抽象工厂模式
结构型（将几个对象组织成一个结构）：桥接模式，外观模式，代理模式
行为型（多个对象之间的通信）：观察者模式，策略模式

工厂模式：需要创建多个对象，且这些对象有共同特征，不需要具体创建各个对象，而是创建对象工厂即可调用，一般常用静态工厂模式

抽象工厂模式：针对工厂模式进行改进，对于工厂模式，想要扩展程序，必须对工厂类进行修改，违背了闭合原则

策略模式：一个系统通过一个接口需要多种不同操作时候可以使用策略模式

单例模式：只有一个对象被创建。建议使用恶汉模式，线程安全，容易实现，初始化慢一点

观察者模式：一个对象被其他多个对象所依赖，当该对象发生变化，则发出通知，其他依赖对象收到通知，做出相应变化。

代理模式：一个代理类代表一个真实类的功能，通过访问代理类来实现对真实类的访问
